{"version":3,"sources":["components/Button.jsx","context/SettingsContext.js","components/CountdownAnimation.jsx","components/SetPomodoro/SetPomodoro.jsx","App.js","index.js"],"names":["Button","title","activeClass","_callback","className","onClick","SettingsContext","createContext","SettingsContextProvider","props","useState","pomodoro","setPomodoro","executing","setExecuting","startAnimate","setStartAnimate","updateExecute","updatedSettings","setTimerTime","evaluate","active","work","short","long","Provider","value","startTimer","pauseTimer","children","remainingTime","minutes","Math","floor","seconds","SettingsBtn","setCurrentTimer","active_state","stopAimate","CountdownAnimation","key","timer","animate","useContext","isPlaying","duration","colors","strokeWidth","size","trailColor","onComplete","SetPomodoro","newTimer","setNewTimer","handleChange","input","target","name","parseInt","noValidate","onSubmit","e","preventDefault","totalTime","numberOfBreaks","longBreak","numberOfCycles","cycleTime","round","console","log","htmlFor","type","onChange","defaultValue","App","useEffect","undefined","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.84eabf70.chunk.js","sourcesContent":["\nconst Button = ({title,activeClass, _callback}) => {\n    return (\n        <button className={activeClass} onClick={_callback}>{title}</button>\n      )\n}\nexport default Button\n","import { useState, createContext } from \"react\";\n\nexport const SettingsContext = createContext()\n\nfunction SettingsContextProvider(props) {\n\n    const [pomodoro, setPomodoro] = useState(0)\n    const [executing, setExecuting] = useState({})\n    const [startAnimate, setStartAnimate] = useState(false)\n\n    function setCurrentTimer (active_state) {\n        updateExecute({\n            ...executing,\n            active: active_state\n        })\n        setTimerTime(executing)\n    }\n\n    // start animation fn \n    function startTimer() {\n        setStartAnimate(true)\n    }\n    // pause animation fn \n    function pauseTimer() {\n    setStartAnimate(false)\n    }\n    // pass time to counter \n    const children = ({ remainingTime }) => {\n    const minutes = Math.floor(remainingTime / 60)\n    const seconds = remainingTime % 60\n    \n    return `${minutes}:${seconds}`\n    }\n\n    // clear session storage \n    const SettingsBtn = () => {\n        setExecuting({})\n        setPomodoro(0)\n    }\n\n    const updateExecute = updatedSettings => {\n        setExecuting(updatedSettings)\n        setTimerTime(updatedSettings)\n    }\n\n    const setTimerTime = (evaluate) => {\n        switch (evaluate.active) {\n            case 'work':\n                setPomodoro(evaluate.work)\n                break;\n            case 'short':\n                setPomodoro(evaluate.short)\n                break;\n            case 'long':\n                setPomodoro(evaluate.long)\n                break;\n                default:\n                    setPomodoro(0)\n                break;\n        }\n    }\n\n    function stopAimate() {\n        setStartAnimate(false)\n    }\n\n    return (\n        <SettingsContext.Provider value={{\n            pomodoro, \n            executing,\n            updateExecute, \n            startAnimate, \n            startTimer,\n            pauseTimer,\n            children,\n            SettingsBtn,\n            setCurrentTimer,\n            stopAimate\n        }}>\n            {props.children}\n        </SettingsContext.Provider>\n    )\n\n}\n\nexport default SettingsContextProvider","import { useContext } from 'react'\nimport {CountdownCircleTimer} from 'react-countdown-circle-timer'\nimport { SettingsContext } from '../context/SettingsContext'\nconst CountdownAnimation = ({key, timer, animate, children}) => {\n\n  const { stopAimate } = useContext(SettingsContext)\n\n    return (\n      <CountdownCircleTimer\n        key={key}\n        isPlaying={animate}\n        duration={timer * 60}\n        colors={[\n          ['#C1FAFF', 0.33],\n          ['#C1FAFF', 0.33],\n          ['#C1FAFF', 0.33],\n        ]}\n        strokeWidth={6}\n        size={220}\n        trailColor=\"#151932\"\n        onComplete={ () => {\n          stopAimate()\n        }}\n      >\n        {children}\n      </CountdownCircleTimer>\n    )\n}\n\nexport default CountdownAnimation\n","import React, { useContext, useState } from 'react'\nimport { SettingsContext } from '../../context/SettingsContext'\nimport \"./setpomodoro.css\"\n\nconst SetPomodoro = () => {\n\n    const [newTimer, setNewTimer] = useState({\n        work: 0.2,\n        short: 0.1,\n        long: 0.5,\n        active: 'work'\n    })\n\n    const {updateExecute} = useContext(SettingsContext)\n\n    const handleChange = input => {\n        const {name, value} = input.target\n        switch (name) {\n            case 'work':\n                setNewTimer({\n                    ...newTimer,\n                    work: parseInt(value)\n                })\n                break;\n            case 'shortBreak':\n                setNewTimer({\n                    ...newTimer,\n                    short: parseInt(value)\n                })\n                break;\n            case 'longBreak':\n                setNewTimer({\n                    ...newTimer,\n                    long: parseInt(value)\n                })\n                break;\n        }\n    }\n    const handleSubmit = e => {\n        e.preventDefault()\n        let totalTime = e.target.work.value;\n        let numberOfBreaks = e.target.numberOfBreaks.value;\n        let longBreak = e.target.longBreak.value;\n        let numberOfCycles = numberOfBreaks;\n        let cycleTime = Math.round((totalTime*60) / numberOfCycles);\n        const shortBreak = 5;\n        console.log(cycleTime)\n        console.log(shortBreak)\n        console.log(longBreak)\n        console.log(numberOfCycles)\n        newTimer.work = cycleTime;\n        newTimer.short = shortBreak;\n        newTimer.long = longBreak;\n        let cycleCounter = 0;\n\n        updateExecute(newTimer)\n    }\n\n\n    return (\n        <div className=\"form-container\">\n        <form noValidate onSubmit={handleSubmit}>\n                <div className=\"input-wrapper\">\n                    <div className=\"elements\">\n                    <label htmlFor=\"input\">Working Time (hr)</label>\n                    <input className=\"input\" type=\"number\" name=\"work\" onChange={handleChange} defaultValue = {1}/>\n                    </div>\n                    <div className=\"elements\">\n                    <label htmlFor=\"input\">No. of Breaks</label>\n                    <input className=\"input\" type=\"number\" name=\"numberOfBreaks\" onChange={handleChange} defaultValue = {2}/>\n                    </div>\n                    <div className=\"elements\">\n                    <label htmlFor=\"input\">longest break(mins)</label>\n                    <input className=\"input\" type=\"number\" name=\"longBreak\" onChange={handleChange} defaultValue = {30}/>\n                    </div>\n                </div>\n                <button type='submit'>Set</button>\n            </form>\n        </div>\n    )\n}\n\nexport default SetPomodoro\n","import React, { useEffect, useContext } from 'react'\nimport Button from './components/Button.jsx'\nimport CountdownAnimation from './components/CountdownAnimation.jsx'\nimport SetPomodoro from './components/SetPomodoro/SetPomodoro.jsx'\nimport { SettingsContext } from './context/SettingsContext'\n\nconst App = () => {\n\n  const {\n    pomodoro,\n    executing,\n    startAnimate,\n    children,\n    startTimer,\n    pauseTimer,\n    updateExecute,\n    setCurrentTimer,\n    SettingsBtn } = useContext(SettingsContext)\n\n    useEffect(() => {updateExecute(executing)}, [executing, startAnimate])\n\n  return (\n    <div className=\"container\">\n      <h1>Pomodoro</h1>\n      <small>A Better way to be Productive</small>\n      <small>Just enter how many focused hours you need</small>\n        <small>To finish whatever you want.. </small><small>And just Follow the clock my Friend</small>\n      {pomodoro !== 0 ?\n      <>\n        <ul className=\"labels\">\n          <li>\n            <Button \n              title=\"Work\" \n              activeClass={executing.active === 'work' ? 'active-label' : undefined} \n              _callback={() => setCurrentTimer('work')} \n            />\n          </li>\n          <li>\n            <Button \n              title=\"Short Break\" \n              activeClass={executing.active === 'short' ? 'active-label' : undefined} \n              _callback={() => setCurrentTimer('short')} \n            />\n          </li>\n          <li>\n            <Button \n              title=\"Long Break\" \n              activeClass={executing.active === 'long' ? 'active-label' : undefined} \n              _callback={() => setCurrentTimer('long')} \n            />\n          </li>\n        </ul>\n        <Button title=\"Settings\" _callback={SettingsBtn} />\n        <div className=\"timer-container\">\n          <div className=\"time-wrapper\">\n              <CountdownAnimation\n                key={pomodoro} \n                timer={pomodoro} \n                animate={startAnimate}\n              >\n                {children}\n              </CountdownAnimation>\n          </div>\n        </div>\n        <div className=\"button-wrapper\">\n          <Button title=\"Start\" activeClass={!startAnimate ? 'active' : undefined} _callback={startTimer} />\n          <Button title=\"Pause\" activeClass={startAnimate ? 'active' : undefined} _callback={pauseTimer} />\n        </div>\n      </> : <SetPomodoro />}\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport SettingsContextProvider from './context/SettingsContext';\n\nReactDOM.render(\n  <SettingsContextProvider>\n    <App />\n  </SettingsContextProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}